@model IEnumerable<Competenct_Management.Models.User_Capability>
@{
    ViewBag.Title = "Index";
}
<h2>Index</h2>
<p>
    @Html.ActionLink("Create New", "Create")
</p>

<table>
    <tr>
        <td >System</td>
        <td style="width: 100px">@Html.DropDownList("SystemsListItems")</td>

        <td >Sub-System</td>
        <td style="width: 100px">
            <select id="SubSystemsDd" name="SubSystemsDd">
            </select>
        </td>
        <td >Component</td>
        <td style="width: 100px">
            <select id="ComponentsDd" name="ComponentsDd">
                <option value="Blank">Blank</option>
            </select>
        </td>

    </tr>
    @*<tr>
            <td>@Html.LabelFor(x => x.CityCode)</td>
            <td style="width: 100px">@Html.DropDownListFor(x => x.CityCode, new List<SelectListItem>(), new { TheOriginalValue = Model.CityCode })</td>
        </tr>*@
</table>

<script type="text/javascript">
    $("#SystemsListItems").change(function (data) {
        // find the selected, and alert it.
        $.ajax({
            url: '/UserCapability/GetSubSystemsList/',
            type: 'POST',
            data: {systemName:$("#SystemsListItems").find(":selected").val() },
            dataType: 'json',                 
            success: function (data) {
                var s = $("#SubSystemsDd");
                s.empty();
                $.each(data, function () {
                    s.append('<option value= \"' + this.System + '-' + this.SubSystem + '\">' + this.SubSystem + '</option>')
                });
            }// ajax callback

        });

    });


</script>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.PersonId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.System)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SubSystem)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Component)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Score)
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PersonId)
            </th>
            <td>
                @Html.DisplayFor(modelItem => item.System)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubSystem)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Component)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Score)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.PersonId }) |
                @Html.ActionLink("Details", "Details", new { id = item.PersonId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.PersonId })
            </td>
        </tr>


    }

